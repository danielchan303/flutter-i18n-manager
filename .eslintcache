[{"/Users/daniel/Downloads/i18next-json-manager-main/src/index.js":"1","/Users/daniel/Downloads/i18next-json-manager-main/src/reportWebVitals.js":"2","/Users/daniel/Downloads/i18next-json-manager-main/src/store/store.ts":"3","/Users/daniel/Downloads/i18next-json-manager-main/src/App.js":"4","/Users/daniel/Downloads/i18next-json-manager-main/src/store/models/i18n.js":"5","/Users/daniel/Downloads/i18next-json-manager-main/src/component/Row.jsx":"6"},{"size":623,"mtime":1608544874000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608544874000,"results":"9","hashOfConfig":"8"},{"size":390,"mtime":1608544874000,"results":"10","hashOfConfig":"8"},{"size":4820,"mtime":1627006161880,"results":"11","hashOfConfig":"8"},{"size":2789,"mtime":1608544874000,"results":"12","hashOfConfig":"8"},{"size":3477,"mtime":1627006787389,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"136suyo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daniel/Downloads/i18next-json-manager-main/src/index.js",[],["30","31"],"/Users/daniel/Downloads/i18next-json-manager-main/src/reportWebVitals.js",[],"/Users/daniel/Downloads/i18next-json-manager-main/src/store/store.ts",[],["32","33"],"/Users/daniel/Downloads/i18next-json-manager-main/src/App.js",["34"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Row from \"./component/Row\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const i18n = useSelector(state => state.i18n);\n\n  const createNewMainKey = () => {\n    const key = prompt(\"Enter the new key name: \");\n    if (key) {\n      dispatch.i18n.createNewMainKey({ key });\n    }\n  };\n\n  const changeMainKeyName = (key, value) => {\n    dispatch.i18n.changeMainKeyName({ key, value });\n  };\n\n  const deleteMainKey = key => {\n    dispatch.i18n.deleteMainKey({ key });\n  };\n\n  const createNewNestedKey = key => {\n    const nestedKey = prompt(\"Enter the new nested key name: \");\n    if (nestedKey) {\n      dispatch.i18n.newNestedKey({ key, nestedKey });\n    }\n  };\n\n  const updateNestedKey = (mainKey, nestedKey, newNestedKey) => {\n    dispatch.i18n.updateNestedKey({ mainKey, nestedKey, newNestedKey });\n  };\n\n  const updateNestedKeyValue = ({ key, nestedKey, language, value }) => {\n    dispatch.i18n.updateNestedKeyValue({ key, nestedKey, language, value });\n  };\n\n  const deleteNestedKeyValue = (key, nestedKey) => {\n    const response = prompt(\"Are you sure to delete? type 'yes' to cofirm\");\n    if (response === \"yes\") {\n      dispatch.i18n.deleteNestedKeyValue({ key, nestedKey });\n    }\n  };\n\n  const getLangJSON = language => {\n    const output = {};\n    for (let mainItem of i18n) {\n      const subObj = {};\n      for (let nestedItem of mainItem.values) {\n        subObj[nestedItem.key] = nestedItem[language];\n      }\n      output[mainItem.key] = subObj;\n    }\n    return JSON.stringify(output, undefined, 4);\n  };\n\n  const output = getLangJSON(\"tc\");\n  console.log(\"output\", output);\n\n  const backupRef = React.useRef();\n  const enRef = React.useRef();\n  const tcRef = React.useRef();\n  const scRef = React.useRef();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 id=\"heading\">Flutter i18n Manager</h1>\n        <div>\n          <button className=\"header-button\" onClick={createNewMainKey}>\n            Add main category\n          </button>\n          <button\n            className=\"header-button\"\n            onClick={() => {\n              const backup = prompt(\"Input the backup below\");\n              if (backup) {\n                dispatch.i18n.importFromBackup(JSON.parse(backup));\n              }\n            }}\n          >\n            Import\n          </button>\n          <button\n            className=\"header-button\"\n            onClick={() => {\n              backupRef.current.click();\n              enRef.current.click();\n              tcRef.current.click();\n              scRef.current.click();\n            }}\n          >\n            Download\n          </button>\n        </div>\n      </header>\n      <main>\n        <div className=\"card horizontalRow\">\n          <a\n            ref={backupRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(JSON.stringify(i18n))\n            }\n            download=\"backup.json\"\n          >\n            Backup\n          </a>\n          <a\n            ref={enRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(getLangJSON(\"en\"))\n            }\n            download=\"en.json\"\n          >\n            EN\n          </a>\n          <a\n            ref={tcRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(getLangJSON(\"tc\"))\n            }\n            download=\"tc.json\"\n          >\n            TC\n          </a>\n          <a\n            ref={scRef}\n            style={{ display: \"none\" }}\n            href={\n              \"data:text/plain;charset=utf-8,\" +\n              encodeURIComponent(getLangJSON(\"sc\"))\n            }\n            download=\"sc.json\"\n          >\n            SC\n          </a>\n        </div>\n        <div className=\"card\">\n          <div>\n            <Row\n              i18n={i18n}\n              changeMainKeyName={changeMainKeyName}\n              deleteMainKey={deleteMainKey}\n              createNewNestedKey={createNewNestedKey}\n              updateNestedKey={updateNestedKey}\n              updateNestedKeyValue={updateNestedKeyValue}\n              deleteNestedKeyValue={deleteNestedKeyValue}\n            />\n          </div>\n        </div>\n        <div className=\"card\">\n          <h2>Output</h2>\n          <p>{JSON.stringify(i18n)}</p>\n          <h3>en</h3>\n          <p>{getLangJSON(\"en\")}</p>\n          <h3>tc</h3>\n          <p>{getLangJSON(\"tc\")}</p>\n          <h3>sc</h3>\n          <p>{getLangJSON(\"sc\")}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/daniel/Downloads/i18next-json-manager-main/src/store/models/i18n.js",["35"],"import { sify } from \"chinese-conv\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst i18n = {\n  state: [], // initial state\n  reducers: {\n    // handle state changes with pure functions\n    importFromBackup(state, payload) {\n      // const data = [];\n      // for (let [mainKey, mainValue] of Object.entries(payload)) {\n      //   const mainKeyData = [];\n      //   for (let [nestedKey, nestedValue] of Object.entries(mainValue)) {\n      //     mainKeyData.push({\n      //       key: nestedKey,\n      //       en: nestedValue.en,\n      //       tc: nestedValue.tc,\n      //       sc: nestedValue.sc,\n      //     });\n      //   }\n      //   data.push({\n      //     key: mainKey,\n      //     values: mainKeyData,\n      //   });\n      // }\n      // console.log(\"output data\", data);\n      return payload;\n    },\n    createNewMainKey(state, payload) {\n      if (!state.some(item => item.key === payload.key)) {\n        state.push({ key: payload.key, values: [] });\n      }\n      return state;\n    },\n    changeMainKeyName(state, payload) {\n      // find index\n      const data = state.find(item => item.key === payload.key);\n      // assign the original data to new key\n      data.key = payload.value;\n      return state;\n    },\n    deleteMainKey(state, payload) {\n      const index = state.findIndex(item => item.key === payload.key);\n      state.splice(index, 1);\n      return state;\n    },\n    newNestedKey(state, payload) {\n      const mainValue = state.find(item => item.key === payload.key);\n      const nestedItem = mainValue.values.find(\n        item => item.key === payload.nestedKey\n      );\n      if (!nestedItem) {\n        mainValue.values.push({\n          key: payload.nestedKey,\n          en: \"\",\n          tc: \"\",\n          sc: \"\",\n        });\n      }\n      return state;\n    },\n    updateNestedKey(state, payload) {\n      const mainValue = state.find(item => item.key === payload.mainKey);\n      const nestedItem = mainValue.values.find(\n        item => item.key === payload.nestedKey\n      );\n      nestedItem.key = payload.newNestedKey;\n      return state;\n    },\n    updateNestedKeyValue(state, payload) {\n      const { key, nestedKey, language, value } = payload;\n      const mainValue = state.find(item => item.key === key);\n      const nestedItem = mainValue.values.find(item => item.key === nestedKey);\n      nestedItem[language] = value;\n      nestedItem.sc = sify(nestedItem.tc);\n      return state;\n    },\n    deleteNestedKeyValue(state, payload) {\n      const { key, nestedKey } = payload;\n      const mainValue = state.find(item => item.key === key);\n      const nestedItemIndex = mainValue.values.findIndex(\n        item => item.key === nestedKey\n      );\n\n      mainValue.values.splice(nestedItemIndex, 1);\n      return state;\n    },\n  },\n};\n\nexport default i18n;\n","/Users/daniel/Downloads/i18next-json-manager-main/src/component/Row.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":2,"column":16,"nodeType":"42","messageId":"43","endLine":2,"endColumn":22},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","no-global-assign","no-unsafe-negation"]